# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
# services:
#   server:
#     image: server
#     build:
#       context: .
#       target: final
#     container_name: fridgebe-server-1
#     ports:
#       - 5091:5091
#       # - 7160:7160

#     # The commented out section below is an example of how to define a PostgreSQL
#     # database that your application can use. `depends_on` tells Docker Compose to
#     # start the database before your application. The `db-data` volume persists the
#     # database data between container restarts. The `db-password` secret is used
#     # to set the database password. You must create `db/password.txt` and add
#     # a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       - db
#     networks:
#       - fridge-net
#   db:
#     image: mysql
#     restart: always
#     container_name: test-mysql
#     # user: postgres
#     # secrets:
#     #   - db-password
#     volumes:
#       - ./test-mysql:/var/lib/mysql
#     environment:
#       - MYSQL_DATABASE=fridge
#       - MYSQL_USER=root 
#       - MYSQL_PASSWORD=my-secret-pw
#     # expose:
#     #   - 5432
#     ports:
#       - 57779:3306
#     # healthcheck:
#     #   test: [ "CMD", "pg_isready" ]
#     #   interval: 10s
#     #   timeout: 5s
#     #   retries: 5
#     networks:
#       - fridge-net
# volumes:
#   test-mysql:
# # secrets:
# #   db-password:
# #     file: db/password.txt
# networks:
#   fridge-net:
#     driver: bridge
